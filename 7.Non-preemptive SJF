/* sjf_nonpreemptive.c
   Compile: gcc sjf_nonpreemptive.c -o sjf_nonpreemptive
*/
#include <stdio.h>
#include <limits.h>

typedef struct {int pid, at, bt, ct, wt, tat, done;} Proc;

int main(){
    int n; printf("Number of processes: "); scanf("%d",&n);
    Proc p[n];
    for(int i=0;i<n;i++){ p[i].pid=i+1;
        printf("P%d arrival time burst time: ",i+1);
        scanf("%d %d",&p[i].at,&p[i].bt);
        p[i].done=0;
    }
    int t=0, completed=0;
    while(completed<n){
        int idx=-1, minBT=INT_MAX;
        for(int i=0;i<n;i++){
            if(!p[i].done && p[i].at<=t){
                if(p[i].bt < minBT){ minBT=p[i].bt; idx=i;}
                else if(p[i].bt==minBT && p[i].at < p[idx].at) idx=i;
            }
        }
        if(idx==-1){ t++; continue; }
        t += p[idx].bt;
        p[idx].ct = t;
        p[idx].tat = p[idx].ct - p[idx].at;
        p[idx].wt = p[idx].tat - p[idx].bt;
        p[idx].done = 1; completed++;
    }
    printf("PID AT BT CT TAT WT\n");
    for(int i=0;i<n;i++) printf("%3d %2d %2d %3d %3d %3d\n",
        p[i].pid,p[i].at,p[i].bt,p[i].ct,p[i].tat,p[i].wt);
    return 0;
}
