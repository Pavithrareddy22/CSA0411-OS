/* shm_ipc.c
   Compile: gcc shm_ipc.c -o shm_ipc
   This example creates a shared memory block and demonstrates a writer (parent) and reader (child).
*/
#include <stdio.h>
#include <sys/ipc.h>
#include <sys/shm.h>
#include <sys/types.h>
#include <unistd.h>
#include <string.h>
#include <wait.h>

int main(){
    key_t key = ftok(".", 'S');
    int shmid = shmget(key, 1024, IPC_CREAT | 0666);
    if(shmid < 0){ perror("shmget"); return 1;}
    char *mem = (char*) shmat(shmid, NULL, 0);
    if(mem == (char*)-1){ perror("shmat"); return 1;}
    pid_t pid = fork();
    if(pid==0){
        // child: reader
        sleep(1); // wait for parent to write
        printf("Reader (child) reads: \"%s\"\n", mem);
        shmdt(mem);
        return 0;
    } else {
        // parent: writer
        char msg[256];
        printf("Enter message to write to shared memory: ");
        fgets(msg, sizeof(msg), stdin);
        msg[strcspn(msg,"\n")] = 0;
        strcpy(mem, msg);
        wait(NULL);
        shmdt(mem);
        shmctl(shmid, IPC_RMID, NULL);
    }
    return 0;
}
