// employee_random_access.c
#include <stdio.h>
#include <stdlib.h>
#include <string.h>

#define FNAME "employees.dat"
#define NAME_LEN 40

typedef struct {
    int id;                // id = 0 means empty/unused
    char name[NAME_LEN];
    int age;
    double salary;
} Employee;

void add_employee() {
    Employee e;
    FILE *fp = fopen(FNAME, "ab");
    if (!fp) { perror("fopen"); return; }

    printf("Enter id: "); if (scanf("%d", &e.id) != 1) { fclose(fp); return; }
    getchar();
    printf("Enter name: "); fgets(e.name, NAME_LEN, stdin); e.name[strcspn(e.name,"\n")] = 0;
    printf("Enter age: "); scanf("%d", &e.age);
    printf("Enter salary: "); scanf("%lf", &e.salary);
    fwrite(&e, sizeof(Employee), 1, fp);
    fclose(fp);
    printf("Employee added.\n");
}

void list_employees() {
    Employee e;
    FILE *fp = fopen(FNAME, "rb");
    if (!fp) { puts("No records."); return; }
    printf("All employees:\n");
    while (fread(&e, sizeof(Employee), 1, fp) == 1) {
        if (e.id != 0)
            printf("ID:%d Name:%s Age:%d Salary:%.2f\n", e.id, e.name, e.age, e.salary);
    }
    fclose(fp);
}

long find_record_pos_by_id(FILE *fp, int id) {
    Employee e;
    long pos = 0;
    rewind(fp);
    while (fread(&e, sizeof(Employee), 1, fp) == 1) {
        if (e.id == id)
            return pos;
        pos += sizeof(Employee);
    }
    return -1;
}

void update_employee() {
    int id;
    printf("Enter id to update: "); if (scanf("%d", &id) != 1) return;
    FILE *fp = fopen(FNAME, "r+b");
    if (!fp) { puts("No records."); return; }
    long pos = find_record_pos_by_id(fp, id);
    if (pos == -1) { puts("Employee not found."); fclose(fp); return; }

    Employee e;
    fseek(fp, pos, SEEK_SET);
    fread(&e, sizeof(Employee), 1, fp);

    printf("Updating (leave blank to keep). Current name: %s\n", e.name);
    getchar();
    char buf[NAME_LEN];
    printf("New name: "); fgets(buf, NAME_LEN, stdin);
    if (buf[0] != '\n') { buf[strcspn(buf,"\n")] = 0; strncpy(e.name, buf, NAME_LEN); }

    printf("New age (0 to keep %d): ", e.age); int a; scanf("%d", &a); if (a!=0) e.age = a;
    printf("New salary (0 to keep %.2f): ", e.salary); double s; scanf("%lf",&s); if (s!=0) e.salary = s;

    fseek(fp, pos, SEEK_SET);
    fwrite(&e, sizeof(Employee), 1, fp);
    fclose(fp);
    puts("Employee updated.");
}

void search_employee() {
    int id; printf("Enter id to search: "); if (scanf("%d", &id) != 1) return;
    FILE *fp = fopen(FNAME, "rb");
    if (!fp) { puts("No records."); return; }
    Employee e;
    while (fread(&e, sizeof(Employee), 1, fp) == 1) {
        if (e.id == id) {
            printf("Found: ID:%d Name:%s Age:%d Salary:%.2f\n", e.id, e.name, e.age, e.salary);
            fclose(fp); return;
        }
    }
    puts("Not found."); fclose(fp);
}

int main() {
    int choice;
    for (;;) {
        puts("\n1.Add  2.List  3.Search  4.Update  5.Exit\nChoice: ");
        if (scanf("%d", &choice) != 1) break;
        switch(choice) {
            case 1: add_employee(); break;
            case 2: list_employees(); break;
            case 3: search_employee(); break;
            case 4: update_employee(); break;
            case 5: exit(0);
            default: puts("Invalid");
        }
    }
    return 0;
}
