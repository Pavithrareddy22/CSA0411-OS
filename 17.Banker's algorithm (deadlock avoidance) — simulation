// banker.c
#include <stdio.h>
#include <stdlib.h>

int main() {
    int n, m;
    printf("Number of processes: "); scanf("%d", &n);
    printf("Number of resources: "); scanf("%d", &m);

    int i, j;
    int alloc[n][m], max[n][m], need[n][m], avail[m];
    printf("Enter Allocation matrix (n x m):\n");
    for(i=0;i<n;i++) for(j=0;j<m;j++) scanf("%d",&alloc[i][j]);
    printf("Enter Max matrix (n x m):\n");
    for(i=0;i<n;i++) for(j=0;j<m;j++) scanf("%d",&max[i][j]);
    printf("Enter Available vector (m):\n");
    for(j=0;j<m;j++) scanf("%d",&avail[j]);

    for(i=0;i<n;i++) for(j=0;j<m;j++) need[i][j] = max[i][j] - alloc[i][j];

    int finish[n]; for(i=0;i<n;i++) finish[i]=0;
    int safe[n], idx=0;

    int changed = 1;
    while (idx < n && changed) {
        changed = 0;
        for (i=0;i<n;i++) if (!finish[i]) {
            int ok = 1;
            for (j=0;j<m;j++) if (need[i][j] > avail[j]) { ok = 0; break; }
            if (ok) {
                for (j=0;j<m;j++) avail[j] += alloc[i][j];
                safe[idx++] = i;
                finish[i] = 1;
                changed = 1;
            }
        }
    }

    int all_done = 1;
    for (i=0;i<n;i++) if (!finish[i]) { all_done = 0; break; }

    if (all_done) {
        printf("System is in a SAFE state.\nSafe sequence: ");
        for (i=0;i<n;i++) printf("P%d%s", safe[i], (i==n-1?"\n":" -> "));
    } else {
        printf("System is NOT in a safe state. Deadlock possible.\n");
    }
    return 0;
}
